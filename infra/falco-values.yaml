# Enable the driver, and choose between the kernel module or the ebpf probe.
# Default value: kernel module.
driver:
  enabled: true
  kind: modern_ebpf
  modernEbpf:
    bufSizePreset: 4

# Enable the collectors used to enrich the events with metadata.
# Check the values.yaml file for fine-grained options.
collectors:
  enabled: true

# We set the controller to daemonset since we have the syscalls source enabled.
# It will ensure that every node on our cluster will be monitored by Falco.
# Please note that the api-server will use the "k8saudit-webhook" service to send
# audit logs to the falco instances. That means that when we have multiple instances of Falco
# we can not predict to which instance the audit logs will be sent. When testing please check all
# the Falco instance to make sure that at least one of them have received the audit logs.
controller:
  kind: deployment
  deployment:
    replicas: 1

falcoctl:
  artifact:
    install:
      # -- Enable the init container.
      enabled: true
    follow:
      # -- Enable the sidecar container. We do not support it yet for plugins. It is used only for rules feed such as k8saudit-rules rules.
      enabled: true
  config:
    artifact:
      install:
        # -- Do not resolve the depenencies for artifacts. By default is true, but for our use case we disable it.
        resolveDeps: true
        # -- List of artifacts to be installed by the falcoctl init container.
        refs: [falco-rules:3, k8saudit-rules:0.7, cloudtrail-rules:0.9, falco-sandbox-rules:3, github-rules:0.7]
      follow:
        # -- List of artifacts to be followed by the falcoctl sidecar container.
        refs: [falco-rules:3, k8saudit-rules:0.7, cloudtrail-rules:0.9, falco-sandbox-rules:3, github-rules:0.7]

services:
  - name: k8saudit-webhook
    type: NodePort
    ports:
      - port: 9765 # See plugin open_params
        nodePort: 30007
        protocol: TCP
  - name: github-webhook
    type: NodePort
    ports:
      - port: 80 # See plugin open_params
        nodePort: 30009
        protocol: TCP

falco:
  rules_file:
    - /etc/falco/falco_rules.yaml
    - /etc/falco/k8s_audit_rules.yaml
    - /etc/falco/aws_cloudtrail_rules.yaml
    - /etc/falco/falco_sandbox_rules.yaml
    - /etc/falco/github.yaml
    - /etc/falco/rules.d
  # plugins:
  #   - name: k8saudit
  #     library_path: libk8saudit.so
  #     init_config:
  #       ""
  #       # maxEventBytes: 1048576
  #       # sslCertificate: /etc/falco/falco.pem
  #     open_params: "http://:9765/k8s-audit"
  #   - name: json
  #     library_path: libjson.so
  #     init_config: ""
  #   - name: cloudtrail
  #     library_path: libcloudtrail.so
  #     init_config: '{"sqsDelete": true}'
  #     open_params: "sqs://falco-sec"
  #   - name: github
  #     library_path: libgithub.so
  #     init_config: '{"websocketServerURL" :"http://34.218.209.85/webhook", "useHTTPs":false}'
  #     open_params: 'S3B4SZ17/falco_kcd_cr'
  load_plugins: [k8saudit, cloudtrail, json, github]
  json_output: true
  json_include_output_property: true
  json_include_tags_property: true
  http_output:
    enabled: true
    url: "http://falco-falcosidekick.falco:2801"

  metrics:
    enabled: true
    interval: 15m
    output_rule: true
    # output_file: /tmp/falco_stats.jsonl
    resource_utilization_enabled: true
    state_counters_enabled: true
    kernel_event_counters_enabled: true
    libbpf_stats_enabled: true
    convert_memory_to_mb: true
    include_empty_values: false

# -- Parameters used
healthChecks:
  livenessProbe:
    # -- Tells the kubelet that it should wait X seconds before performing the first probe.
    initialDelaySeconds: 30
    # -- Number of seconds after which the probe times out.
    timeoutSeconds: 10
    # -- Specifies that the kubelet should perform the check every x seconds.
    periodSeconds: 20
  readinessProbe:
    # -- Tells the kubelet that it should wait X seconds before performing the first probe.
    initialDelaySeconds: 30
    # -- Number of seconds after which the probe times out.
    timeoutSeconds: 10
    # -- Specifies that the kubelet should perform the check every x seconds.
    periodSeconds: 20

tty: true

falcosidekick:
  enabled: true
  webui:
    enabled: true
    replicaCount: 1
    service:
      # -- The web UI service type
      type: NodePort
      nodePort: 30282
  replicaCount: 1

# Commented out since merged with terraform in the init provisioning
# extra:
#   env:
#     - name: AWS_DEFAULT_REGION
#       value: "us-west-2"
#     - name: AWS_ACCESS_KEY_ID
#       value: ""
#     - name: AWS_SECRET_ACCESS_KEY
#       value: ""
#     - name: GITHUB_PLUGIN_TOKEN
#       value: ""
